Данная грамматика основана на грамматике pl0

Все ключевые слова принимаются только в верхнем регистре

Типы данных: BOOL, INTEGER, FLOAT, STRING
В языке используется динамическая типизация
При объявление не требуется указывать тип переменной, перемнные указываются в конструкции VAR или CHAR 
в начале программы или в в начале процедуры: 
CONST max = 100, db = true;
VAR x, y = 12, b, s;
В блоках VAR и CONST вместа знака присвоения ':=' используется '='

Строковым литералом является тип STRING
  Пример объявления: s := "hello"
  Действия со строковым литералом: присваивание, сравнение, вывод с помощью PRINT
Оператор присваивания ':='
Арифметические операнды: ==, >=, <=, >, <, !=,  +, -, /, *
Логические операторы: НЕ (!), И (AND), ИЛИ (OR)
  Каждое отдельное условие должно быть заключено в скобки: IF (b) THEN
                                                           WHILE (s == "hello") OR (x >= 12) DO
                                                           IF (s == "hello") OR ((x >= 12) AND !(b))
Условный оператор:
  Конструкция типа   IF условие THEN блок действий
  Условие может быть: - выражено сравнением двух чисел
                      - выражено сравнением двух переменных BOOL
                      - значением переменной BOOL
                      - значением переменной FLOAT или INTEGER (0 - false, остальные значения - true)

Оператор цикла:
  Конструкция типа  WHILE условие DO блок действий
  Условие может быть: - выражено сравнением двух чисел
                      - выражено сравнением двух переменных BOOL
                      - значением переменной BOOL
                      - значением переменной FLOAT или INTEGER (0 - false, остальные значения - true)
  Так же имеются: - BREAK (выход из цикла)
                  - CONTINUE (пропуск шага цикла)

Базовый вывод:
  Конструкция типа  PRINT (пременная или значение, переменная или значение, .......)

Блоки констант и переменных должны быть первыми двумя блоками в программе не важно в каком порядке

Комментарии:
    - // (однострочный комментарий)
    - /* ... */ (многострочный комментарий)

Операторными скобками выступает конструкция BEGIN ... END;
  В конце каждой операторной скобки ставится ';'. Исключением является последний END
  основного блока, там ставится '.'

После каждого действий необходимо ставиться ';'
