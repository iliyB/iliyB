Запуск осуществлялся в IntelliJ IDEA c использованием библиотеки antlr 4.8
Входными данными является файл с исходным кодом на языке hello.
Выходными данными является файл с расширением ll.
Объектный код llvm выполняется с помощью llc:
llc -filetype=obj hello.ll
gcc hello.o -no-pie -o hello
./hello


Данная грамматика основана на грамматике pl0

Все ключевые слова принимаются только в верхнем регистре



Типы данных: BOOL, INTEGER, DOUBLE, STRING
В языке используется динамическая типизация
При объявление  требуется указывать тип переменной, перемнные указываются в конструкции VAR 
в начале программы или в в начале процедуры: 
VAR int x, double y = 12.2, boolean b, int s;
VAR string a = "hello";
В блоке VAR вместо знака присвоения ':=' используется '='

Вначале кода указываются глобальные перенные.
Для процедуры можно задать свои локальные перенные,
для основного блока локальные переменные задать нельзя

Строковым литералом является тип STRING
  Пример объявления: s := "hello"
  Действия со строковым литералом: объявление со значением, вывод с помощью PRINT
Оператор присваивания ':='
Арифметические операнды: ==, >=, <=, >, <, !=,  +, -, /, *
Логические операторы: НЕ (!), И (AND), ИЛИ (OR)
  Каждое отдельное условие должно быть заключено в скобки: IF (b) THEN
                                                           WHILE (s == 2) OR (x >= 12) DO
                                                           IF (false) OR ((x >= 12) AND !(b))
Условный оператор:
  Конструкция типа   IF условие THEN блок действий
  Условие может быть: - выражено сравнением двух чисел
                      - выражено сравнением двух переменных BOOL
                      - значением переменной BOO

Оператор цикла:
  Конструкция типа  WHILE условие DO блок действий
  Условие может быть: - выражено сравнением двух чисел
                      - выражено сравнением двух переменных BOOL
                      - значением переменной BOOL
  

Базовый вывод:
  Конструкция типа  PRINT (пременная или значение)

Блок переменных должty быть первым блоком в программе

Комментарии:
    - // (однострочный комментарий)
    - /* ... */ (многострочный комментарий)

Операторными скобками выступает конструкция BEGIN ... END;
  В конце каждой операторной скобки ставится ';'. Исключением является последний END
  основного блока, там ставится '.'

После каждого действий необходимо ставиться ';'
